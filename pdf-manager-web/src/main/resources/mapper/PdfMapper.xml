<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pdf.manager.pdfmanagerweb.dao.IPdf">
    <resultMap id="map" type="com.pdf.manager.pdfmanagerweb.entity.Pdf">
        <id column="id" property="id" jdbcType="CHAR"/>
        <result column="md5" property="md5" jdbcType="VARCHAR"/>
        <result column="userId" property="userId" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="location" property="location" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="result" property="result" jdbcType="VARCHAR"/>
        <result column="createDateTime" property="createDateTime" jdbcType="DATE"/>
    </resultMap>

    <insert id="add" keyProperty="id" keyColumn="id">
        insert into Pdf (id, md5, userId, name, location, status, result, createDateTime)
        values (#{id}, #{md5}, #{userId}, #{name}, #{location}, #{status}, #{result}, #{createDateTime})
    </insert>

    <insert id="addRange">
        insert into Pdf (id, md5, userId, name, location, status, result, createDateTime)
        values
        <foreach collection="list" item="user" index="index" separator=",">
            (#{id}, #{md5}, #{userId}, #{name}, #{location}, #{status}, #{result}, #{createDateTime})
        </foreach>
    </insert>

    <delete id="delete">
        delete from Pdf
        where id = #{id}
    </delete>

    <update id="update">
        update Pdf
        set id = #{id},
            md5 = #{md5},
            userId = #{userId},
            name = #{name},
            location = #{location},
            status = #{status},
            result = #{result},
            createDateTime = #{createDateTime}
        where id = #{id}
    </update>

    <insert id="addOrUpdate">
        replace into Pdf (id, md5, userId, name, location, status, result, createDateTime)
        values (#{id}, #{md5}, #{userId}, #{name}, #{location}, #{status}, #{result}, #{createDateTime})
    </insert>

    <select id="getAll" resultMap="map">
        select id, md5, userId, name, location, status, result, createDateTime
        from Pdf
        order by createDateTime
    </select>

    <select id="getById" resultMap="map">
        select id, md5, userId, name, location, status, result, createDateTime
        from Pdf
        where id = #{id}
    </select>

    <select id="getByName" resultMap="map">
        select id, md5, userId, name, location, status, result, createDateTime
        from Pdf
        where name like concat('%', #{name}, '%')
    </select>

    <select id="getByUserId" resultMap="map">
        select id, md5, userId, name, location, status, result, createDateTime
        from Pdf
        where userId = #{userId}
    </select>
</mapper>